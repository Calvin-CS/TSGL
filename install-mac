#!/bin/bash
# Installation script for OS X
# Tested on OS X 10.12
# Last updated: 3/7/18
#
###############################

VER_XQ="XQuartz-2.7.7"

mkdir build
mkdir bin

#Function for checking command availability
has () {
  (command -v "$1" >/dev/null 2>&1 && echo 1) || echo 0
}

#Print X11 warning
if [ $(ls /Applications/Utilities | grep XQuartz.app | wc -l) -eq 0 ]; then
  echo "Installing X11"
  curl -L -O "http://xquartz.macosforge.org/downloads/SL/$VER_XQ.dmg"
  open -W "$VER_XQ.dmg"
  echo "Please continue the installation process by double-clicking XQuartz.pkg and following the instructions on screen."
  echo "Please enter to continue once XQuartz has finished installing."
  read
fi

#Install Xcode command line tools (will do nothing if already installed)
if [ ! -e "/Library/Developer/CommandLineTools" ]; then
  cmd="xcode-select --install"
  $cmd # Fix for vim syntax highlighting bugginess
  echo "Please select \"Install\" from the confirmation window that appears, and Agree to the license terms."
  echo "Press enter to continue once Xcode command line tools has finished installing"
  read
fi

#Install brew
if [ $(has brew) = 0 ]; then
  echo "Installing Homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  export PATH=/usr/local/bin:$PATH
else
  echo "Homebrew detected."
  export PATH=/usr/local/bin:$PATH
fi

echo
echo "Using Homebrew to install dependencies..."
echo

brew update

brew tap homebrew/versions

#Install glfw3 (will do nothing if already installed)
echo "Installing GLFW..."
brew install glfw3

#GLEW
echo "Installing GLEW..."
brew install glew

#Freetype
echo "Installing Freetype2..."
brew install freetype

#Doxygen
echo "Installing Doxygen..."
brew install doxygen

#g++
gVers=$(g++ -v 2>&1)
gVeres=$(g++ -v 2>&1 | grep "gcc version" | cut -f 3 -d ' ' | tr -d .)

echo "$gVers" | grep "clang" > check.txt

version=700
# TODO maybe this is too new?

# #First, check if we need to move an existing g++ compiler
# if [ -e /usr/local/bin/g++ ] && [ ! -e /usr/local/Cellar/gcc49 ];
# then
# 	sudo mv /usr/local/bin/g++ /usr/local/bin/g++old
# 	sudo mv /usr/local/bin/gcc /usr/local/bin/gccold
#
# fi

#Now check if we need to install gcc
#
#Check for the Apple Clang symlink version of gcc
if grep --quiet clang check.txt; then
	# echo "Installing g++...this may take a while!"
  echo "Clang is symlinked in place of GCC.  We need to unlink Clang and install GCC."
	brew install gcc@7
	brew link gcc
  # brew link g++
elif [ "$gVeres" -lt "$version" ]; then
	echo "Installing g++... this could be a while!"
	brew install gcc@7
  brew link gcc
  # brew link g++
else
	echo "Checking GCC@7 links..."
	brew install gcc@7
  brew link gcc
  # brew link g++
fi

#Symlinks
echo "Fixing missing symlinks..."
if [ ! -e /usr/X11/lib/libX11.dylib ]; then
  sudo ln -s /usr/X11/lib/libX11.6.dylib /usr/X11/lib/libX11.dylib
fi

if [ ! -e /usr/X11/lib/libXrandr.dylib ]; then
  sudo ln -s /usr/X11/lib/libXrandr.2.dylib /usr/X11/lib/libXrandr.dylib
fi

#Remove any broken symlinks before installing
sudo rm -f /usr/local/lib/libtsgl.*
sudo rm -rf /usr/local/include/TSGL

#Build TSGL and install
echo "Building TSGL..."
echo

make all -j 4

# echo "Installing..."
# echo
#
# sudo make install

echo

echo "Compilation completed. Due to issues with linking fonts, please run"
echo "via ./bin/<executable> for now.  I've disabled installation to make debugging easier."
